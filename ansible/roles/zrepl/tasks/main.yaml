
- name: ensure zrepl not running
  become: true
  ansible.builtin.systemd:
    name: zrepl
    state: stopped
  ignore_errors: true

- name: add zrepl repo
  become: true
  when: ansible_distribution == 'Fedora'
  ansible.builtin.copy:
    src: ./roles/zrepl/files/zrepl.repo
    dest: /etc/yum.repos.d/zrepl.repo
    owner: root
    group: root
    mode: '0644'

- name: install/upgrade zrepl and python
  become: true
  when: ansible_distribution == 'Fedora'
  ansible.builtin.dnf:
    name: 
      - zrepl
      - python3
      - python3-virtualenv
    state: latest

- name: Install the aws route 53 plugin for certbot
  become: true
  ansible.builtin.pip:
    name:
      - certbot 
      - certbot-dns-route53
    virtualenv: /opt/certbot

- name: Make sure .aws directory exists
  become: true
  ansible.builtin.file:
    path: /root/.aws/
    state: directory
    mode: '0700'

- name: Install AWS Credentials for certbot
  become: true
  ansible.builtin.template:
    src: ./roles/zrepl/templates/awsconfig
    dest: /root/.aws/config
    owner: root
    group: root
    mode: '0600'

- name: Install cert renewal script
  become: true
  ansible.builtin.template:
    src: ./roles/zrepl/templates/certbot-renew.sh.j2
    dest: /usr/local/bin/certbot-renew
    owner: root
    group: root
    mode: '0755'

- name: Run cert renewal script
  become: true
  ansible.builtin.shell: /usr/local/bin/certbot-renew

- name: Add cert renewal script to cron if it isn't already
  become: true
  ansible.builtin.lineinfile:
    path: /etc/crontab
    line: '1  2  *  *  * root /usr/local/bin/certbot-renew'
    regexp: '^1  2  *  *  * root /usr/local/bin/certbot-renew$'

- name: Copy over zrepl config
  become: true
  ansible.builtin.copy:
    src: ./roles/zrepl/files/{{ zrepl_name }}.yaml
    dest: /etc/zrepl/zrepl.yml
    owner: root
    group: root
    mode: '0644'

- name: ensure zrepl enabled and started
  become: true
  ansible.builtin.systemd:
    name: zrepl
    state: started
    enabled: yes
