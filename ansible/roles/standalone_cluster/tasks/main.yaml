# Maybe add this for pis in the future cgroup_memory=1 cgroup_enable=memory

- name: Install k3s
  become: true
  vars:
    k3s_state: installed
    k3s_build_cluster: false
    k3s_become: true
  ansible.builtin.import_role:
    name: xanmanning.k3s

- name: Set hostname for use in the future
  set_fact:
    hostname: "{{ ansible_host }}"

- name: Get base directory of git repo
  ansible.builtin.command: git rev-parse --show-toplevel
  delegate_to: 127.0.0.1
  register: base_git_dir
  changed_when: False

- name: Check for existing cluster config
  delegate_to: 127.0.0.1
  ansible.builtin.stat:
    path: "{{ base_git_dir.stdout }}/argo/wailord/argocd/argocd/base/clusters/{{ hostname }}.yaml"
  register: config_stat_result

- name: Gather cluster configs
  ansible.builtin.command: kubectl config view --raw
  become: true
  register: configs
  when: not config_stat_result.stat.exists

- name: Seal cluster configs
  ansible.builtin.shell: echo {{ rendered_template |quote }} | kubeseal -n argocd
  register: sealed_configs
  delegate_to: 127.0.0.1
  vars:
    config: "{{ configs.stdout | from_yaml }}"
    rendered_template: "{{ lookup('template', 'argo-secret.yaml.j2') }}"
  when: not config_stat_result.stat.exists

- name: Write out sealed configs
  ansible.builtin.copy:
    content: "{{ sealed_configs.stdout | from_json | to_yaml(indent=4) }}"
    dest: "{{ base_git_dir.stdout }}/argo/wailord/argocd/argocd/base/clusters/{{ hostname }}.yaml"
  delegate_to: 127.0.0.1
  when: not config_stat_result.stat.exists

- name: Add config to kustomization
  delegate_to: 127.0.0.1
  ansible.builtin.command:
    cmd: kustomize edit add base base/clusters/{{ hostname }}.yaml
    chdir: "{{ base_git_dir.stdout }}/argo/wailord/argocd/argocd"
  register: command_result
  ignore_errors: true
  changed_when: "'Error: base base/clusters/' + hostname + '.yaml already in kustomization file' not in command_result.stderr"
