#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#
rtorrent-flood:
  initContainers: {}
    # remove-session-lock:
    #   image: busybox
    #   command: ["sh", "-c", "rm -rf /config/.local/share/rtorrent/.session/rtorrent.lock"]
    #   volumeMounts:
    #   - name: config
    #     mountPath: /config

  hostname: flood-public

  image:
    # -- image repository
    repository: jesec/rtorrent-flood
    # -- image tag
    tag: latest@sha256:3ed619f32cae15dec9017cd6eefb21abfee48451ff4e09736847e8da2a06339f
    # -- image pull policy
    pullPolicy: IfNotPresent

  # -- environment variables. See [image docs](https://github.com/jesec/flood#configuration) for more details.
  # @default -- See below
  env:
    # -- Set the container timezone
    TZ: UTC
    # -- Folder where Flood stores it's configuration
    HOME: "/config"
    # -- The host that Flood should listen for web connections on
    FLOOD_OPTION_HOST: "0.0.0.0"
    # -- The port that Flood should listen for web connections on
    FLOOD_OPTION_PORT: "3000"
    # -- ADVANCED: rTorrent daemon managed by Flood
    FLOOD_OPTION_RTORRENT: "true"
    # -- Allowed path for file operations
    FLOOD_OPTION_ALLOWEDPATH: "/store/torrent"

  # -- Configures service settings for the chart.
  # @default -- See values.yaml
  service:
    main:
      ports:
        http:
          port: 3000
    bittorrent:
      enabled: true
      type: ClusterIP
      ports:
        bittorrent:
          enabled: true
          port: 56093
          protocol: TCP
          targetPort: 56093

  ingress:
    # -- Enable and configure ingress settings for the chart under this key.
    # @default -- See values.yaml
    main:
      enabled: true
      primary: true
      annotations:
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      labels: {}
      hosts:
        - host: flood-public.jackhil.de
          paths:
            - path: /
              pathType: Prefix
      tls:
      - hosts:
          - flood-public.jackhil.de
        secretName: jackhil.de-cert
    ssl-redirect:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: web
        traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect-http-2-https@kubernetescrd
      labels: {}
      hosts:
        - host: flood-public.jackhil.de
          paths:
            - path: /
              pathType: Prefix
  # -- Configure persistence settings for the chart under this key.
  # @default -- See values.yaml
  persistence:
    config:
      enabled: true
      type: pvc
      accessMode: ReadWriteOnce
      size: 8Gi

    downloads:
      enabled: true
      type: hostPath
      hostPath: /store/torrent-public/


  # -- Minimal configuration provided from https://github.com/jesec/rtorrent/blob/master/doc/rtorrent.rc
  # @default -- string
  config: |
    #############################################################################
    # A minimal rTorrent configuration that provides the basic features
    #############################################################################

    # Some default configs are commented out by #, you can override them to fit your needs
    # Lines commented out by ## are merely examples (NOT default)

    # It is recommended to extend upon this default config file. For example:
    # override only some configs via command line: -o network.port_range.set=6881-6881
    # or, on top of custom config: import = /etc/rtorrent/rtorrent.rc

    

    method.insert = cfg.basedir,  private|const|string, (cat,(fs.homedir),"/.local/share/rtorrent/")
    method.insert = cfg.download, private|const|string, (cat,"/store/torrent-public/", "download/")
    method.insert = cfg.complete, private|const|string, (cat,"/store/torrent-public/", "complete/")
    method.insert = cfg.logs,     private|const|string, (cat,"/store/torrent-public/","log/")
    method.insert = cfg.logfile,  private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")
    method.insert = cfg.session,  private|const|string, (cat,(cfg.basedir),".session/")
    method.insert = cfg.watch,    private|const|string, (cat,"/store/torrent-public/","watch/")


    # Create directories
    fs.mkdir.recursive = (cat,(cfg.basedir))

    fs.mkdir = (cat,(cfg.download))
    fs.mkdir = (cat,(cfg.complete))
    fs.mkdir = (cat,(cfg.logs))
    fs.mkdir = (cat,(cfg.session))

    fs.mkdir = (cat,(cfg.watch))
    fs.mkdir = (cat,(cfg.watch),"/mva")

    # Drop to "$(cfg.watch)/start" to add torrent and start downloading
    schedule2 = watch_mva, 10, 10, "load.start_verbose=/store/torrent-public/watch/mva/*.torrent,d.custom1.set=mva,d.custom3.set=/store/torrent-public/complete"
    # Listening port for incoming peer traffic
    network.port_range.set = 56093-56093
    
    # Add new method to get finished dir (called get_finished_dir)
    method.insert = d.get_finished_dir,simple,"/store/torrent-public/complete"

    # Bind event "torrent has finished" to action "move to new directory based on label"
    method.set_key = event.download.finished,move_complete,"d.directory.set=$d.get_finished_dir=;execute=mkdir,-p,$d.get_finished_dir=;execute=cp,$d.data_path=,$d.get_finished_dir="

    # Distributed Hash Table and Peer EXchange
    # Enable tracker-less torrents but vulnerable to passive sniffing
    # DHT and PEX are always disabled for private torrents
    dht.mode.set = auto
    dht.port.set = 6881
    protocol.pex.set = yes

    # DHT nodes for bootstrapping
    dht.add_bootstrap = dht.transmissionbt.com:6881
    dht.add_bootstrap = dht.libtorrent.org:25401

    # UDP tracker support
    trackers.use_udp.set = yes

    # Peer settings
    throttle.max_uploads.set = 100
    throttle.max_uploads.global.set = 250
    throttle.min_peers.normal.set = 20
    throttle.max_peers.normal.set = 60
    throttle.min_peers.seed.set = 30
    throttle.max_peers.seed.set = 80
    trackers.numwant.set = 80

    group.seeding.ratio.enable=
    group2.seeding.ratio.min.set=200
    group2.seeding.ratio.max.set=300
    group2.seeding.ratio.upload.set=2G

    method.set = group.seeding.ratio.command, "d.close= ; d.erase="

    #protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

    # Limits for file handle resources, this is optimized for
    # an `ulimit` of 1024 (a common default). You MUST leave
    # a ceiling of handles reserved for rTorrent's internal needs!
    network.max_open_files.set = 600
    network.max_open_sockets.set = 300

    # Memory resource usage (increase if you have a large number of items loaded,
    # and/or the available resources to spend)
    pieces.memory.max.set = 1800M
    #network.xmlrpc.size_limit.set = 16M

    # Basic operational settings
    session.path.set = (cat, (cfg.session))
    directory.default.set = (cat, (cfg.download))
    log.execute = (cat, (cfg.logs), "execute.log")
    ##log.xmlrpc = (cat, (cfg.logs), "xmlrpc.log")

    # Other operational settings
    encoding.add = utf8
    system.umask.set = 002
    system.cwd.set = (directory.default)
    #schedule2 = low_diskspace, 5, 60, ((close_low_diskspace, 500M))
    #pieces.hash.on_completion.set = no
    ##view.sort_current = seeding, greater=d.ratio=
    ##keys.layout.set = qwerty

    # HTTP and SSL
    network.http.max_open.set = 50
    network.http.dns_cache_timeout.set = 25

    network.scgi.open_local = (cat,(cfg.basedir),rtorrent.sock)
    print = (cat, "Logging to ", (cfg.logfile))
    log.open_file = "log", (cfg.logfile)
    log.add_output = "info", "log"



    session.use_lock.set = no
    ### END of rtorrent.rc ###

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: app
            operator: In
            values:
            - bulk-datastore


  podSecurityContext:
    runAsUser: 11337
    runAsGroup: 11337
    fsGroup: 11337