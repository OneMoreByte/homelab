immich:
  env:
    DB_HOSTNAME: "{{ .Release.Name }}-pg-cluster-rw"
    DB_DATABASE_NAME: "immich"
    DB_USERNAME:
      valueFrom:
        secretKeyRef:
          name: immich-db-secret
          key: username
    DB_PASSWORD:
      valueFrom:
        secretKeyRef:
          name: immich-db-secret
          key: password

  immich:
    metrics:
      # Enabling this will create the service monitors needed to monitor immich with the prometheus operator
      enabled: true
    persistence:
      # Main data store for all photos shared between different components.
      library:
        enabled: true
        type: hostPath
        mountPath: "/store/k8s-hostpath/immich/library"
        existingClaim: "fake-value"

      syncthing-library:
        enabled: true
        type: hostPath
        mountPath: "/store/backups/syncthings/Pictures"

    configuration: {}

  # Dependencies
  postgresql:
    enabled: false

  redis:
    enabled: true
    architecture: standalone
    auth:
      enabled: false

  # Immich components
  server:
    enabled: true
    image:
      repository: ghcr.io/immich-app/immich-server
      pullPolicy: IfNotPresent
    ingress:
      main:
        enabled: true
        annotations:
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect-http-2-https@kubernetescrd
        hosts:
          - host: photos.jackhil.de
            paths:
              - path: "/"
        tls:
          - hosts:
              - photos.jackhil.de
            secretName: jackhil.de-cert


    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: app
                  operator: In
                  values:
                    - bulk-datastore

    persistence:
      # Main data store for all photos shared between different components.
      library:
        enabled: true
        type: hostPath
        hostPath: "/store/k8s-hostpath/immich"
        existingClaim: ""

      syncthing-library:
        enabled: true
        type: hostPath
        hostPath: "/store/backups/syncthings/Pictures"

      config:
        enabled: true
        type: secret
        name: immich-config


  microservices:
    enabled: true
    image:
      repository: ghcr.io/immich-app/immich-server
      pullPolicy: IfNotPresent


    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: app
                  operator: In
                  values:
                    - bulk-datastore

    persistence:
      # Main data store for all photos shared between different components.
      library:
        enabled: true
        type: hostPath
        hostPath: "/store/k8s-hostpath/immich/"
        existingClaim: ""

      syncthing-library:
        enabled: true
        type: hostPath
        hostPath: "/store/backups/syncthings/Pictures"


      config:
        enabled: true
        type: secret
        name: immich-config

  machine-learning:
    enabled: true
    securityContext:
      # Let it have a look at the GPU without requesting one (since we only have one)
      privileged: true
    image:
      repository: ghcr.io/immich-app/immich-machine-learning
      pullPolicy: IfNotPresent
      tag: v1.100.0-cuda
    env:
      TRANSFORMERS_CACHE: /cache
      NVIDIA_DRIVER_CAPABILITIES: all
    persistence:
      cache:
        enabled: true
        size: 16Gi
        type: pvc
        accessMode: ReadWriteMany

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: app
                  operator: In
                  values:
                    - bulk-datastore
