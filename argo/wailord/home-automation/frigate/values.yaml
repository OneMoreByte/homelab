frigate:
  # Default values for frigate.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  # -- upgrade strategy type (e.g. Recreate or RollingUpdate)
  strategyType: Recreate

  image:
    # -- Docker registry/repository to pull the image from
    repository: ghcr.io/blakeblackshear/frigate
    # -- Overrides the default tag (appVersion) used in Chart.yaml ([Docker Hub](https://hub.docker.com/r/blakeblackshear/frigate/tags?page=1))
    tag: 0.13.1
    # -- Docker image pull policy
    pullPolicy: IfNotPresent

  # -- Docker image pull policy
  imagePullSecrets: []

  # -- additional ENV variables to set. Prefix with FRIGATE_ to target Frigate configuration values
  env: []
 #   - FRIGATE_MQTT_USER:
 #   - FRIGATE_MQTT_PASSWORD:


  # -- set environment variables from Secret(s)
  envFromSecrets:
    # secrets are required before `helm install`
    - frigate-rstp-credentials

  coral:
    # -- enables the use of a Coral device
    enabled: false
    # -- path on the host to which to mount the Coral device
    hostPath: /dev/apex_0

  gpu:
    nvidia:
      # -- Enables NVIDIA GPU compatibility. Must also use the "amd64nvidia" tagged image
      enabled: false

      # -- Overrides the default runtimeClassName
      runtimeClassName:

  # -- declare extra volumes to use for Frigate
  extraVolumes:
    - name: coral
      hostPath:
        path: /dev/apex_0
    - name: recording-storage
      hostPath:
        path: /store/frigate
  # -- declare additional volume mounts
  extraVolumeMounts:
    - mountPath: /dev/apex_0
      name: coral
    - mountPath: /media/frigate
      name: recording-storage
  # -- amount of shared memory to use for caching
  shmSize: 1Gi

  # -- frigate configuration - see [Docs](https://docs.frigate.video/configuration/index) for more info
  config: |
    mqtt:
      # Required: host name
      host: mqtt.jsck.network
      # Optional: port (default: shown below)
      port: 1883
      # Optional: topic prefix (default: shown below)
      # WARNING: must be unique if you are running multiple instances
      topic_prefix: frigate
      # Optional: client id (default: shown below)
      # WARNING: must be unique if you are running multiple instances
      client_id: frigate
      # Optional: user
      #user: '{FRIGATE_MQTT_USER}'
      # Optional: password
      # NOTE: Environment variables that begin with 'FRIGATE_' may be referenced in {}.
      #       eg. password: '{FRIGATE_MQTT_PASSWORD}'
      #password: '{FRIGATE_MQTT_PASSWORD}'
      # Optional: interval in seconds for publishing stats (default: shown below)
      stats_interval: 60
    record:
      enabled: True
      events:
        retain:
          default: 7
          mode: all
    detectors:
      coral:
        type: edgetpu
        device: pci
    go2rtc:
      streams:
        garage1:
          - rtsp://{FRIGATE_RSTP_USERNAME}:{FRIGATE_RTSP_PASSWORD}@192.168.50.42:554/cam/realmonitor?channel=1&subtype=1
        garage1-high:
          - rtsp://{FRIGATE_RSTP_USERNAME}:{FRIGATE_RTSP_PASSWORD}@192.168.50.42:554/cam/realmonitor?channel=1&subtype=0
        backdoor1:
          - rtsp://{FRIGATE_RSTP_USERNAME}:{FRIGATE_RTSP_PASSWORD}@192.168.50.43:554/cam/realmonitor?channel=1&subtype=1
        backdoor1-high:
          - rtsp://{FRIGATE_RSTP_USERNAME}:{FRIGATE_RTSP_PASSWORD}@192.168.50.43:554/cam/realmonitor?channel=1&subtype=0
    cameras:
      garage1:
        ffmpeg:
          inputs:
            - path: rtsp://127.0.0.1:8554/garage1?video=copy
              roles:
                - detect
            - path: rtsp://127.0.0.1:8554/garage1-high?video=copy
              roles:
                - record
        detect:
          width: 704
          height: 480
        motion:
          mask:
           - 704,0,704,63,626,51,385,69,231,82,90,129,0,167,0,0
        zones:
          driveway:
            coordinates: 0,480,594,480,639,370,661,198,654,107,583,54,460,59,369,71,241,128,0,250
          front_door:
            coordinates: 271,79,362,70,397,81,0,252,0,166
      backdoor1:
        ffmpeg:
          inputs:
            - path: rtsp://127.0.0.1:8554/backdoor1?video=copy
              roles:
                - detect
            - path: rtsp://127.0.0.1:8554/backdoor1-high?video=copy
              roles:
                - record
        detect:
          width: 704
          height: 480
        motion:
          mask:
            - 487,0,362,44,120,53,0,59,0,0
        zones:
          backdoor:
            coordinates: 361,52,451,0,570,0,704,47,704,480,0,480,0,77,124,51
    snapshots:
      enabled: True
      retain:
        default: 60
    objects:
      # Optional: list of objects to track from labelmap.txt (default: shown below)
      track:
        - person
        - bicycle
        - car
        - motorcycle
        - bus
        - cat
        - dog
        - hot dog
  # Probes configuration
  probes:
    liveness:
      enabled: true
      initialDelaySeconds: 30
      failureThreshold: 5
      timeoutSeconds: 10
    readiness:
      enabled: true
      initialDelaySeconds: 30
      failureThreshold: 5
      timeoutSeconds: 10
    startup:
      enabled: false
      failureThreshold: 30
      periodSeconds: 10

  service:
    # -- Type of Service to use
    type: LoadBalancer
    # -- Port the Service should communicate on
    port: 5000
    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:
    ## Provide any additional annotations which may be required. This can be used to
    ## set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    # annotations: {}
    # labels: {}

    # -- Set specific IP address for LoadBalancer. `service.type` must be set to `LoadBalancer`
    # loadBalancerIP:

    # loadBalancerSourceRanges: []
    ## Set the externalTrafficPolicy in the Service to either Cluster or Local
    # externalTrafficPolicy: Cluster

  ingress:
    # -- Enables the use of an Ingress Controller to front the Service and can provide HTTPS
    enabled: true

    # -- annotations to configure your Ingress. See your Ingress Controller's Docs for more info.
    annotations:
      traefik.ingress.kubernetes.io/router.middlewares: traefik-forward-auth-middleware@kubernetescrd

    # -- list of hosts and their paths that ingress controller should repsond to.
    hosts:
      - host: frigate.jsck.network
        paths:
          - '/'

    # -- list of TLS configurations
    tls:
      - hosts:
          - frigate.jsck.network
        secretName: jsck.network-cert
  persistence:
    data:
      # -- Enables persistence for the data directory
      enabled: true
      ## frigate data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      ##
      ## If you want to reuse an existing claim, you can pass the name of the PVC using
      ## the existingClaim variable
      # existingClaim: your-claim
      # subPath: some-subpath

      # -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
      accessMode: ReadWriteOnce

      # -- size/capacity of the PVC
      size: 32Gi

      # -- Do not delete the pvc upon helm uninstall
      skipuninstall: false

  # -- Set resource limits/requests for the Pod(s)
  resources:
    requests:
      cpu: 200m
      memory: 128Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    #   gpu.intel.com/i915: 1
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    #   gpu.intel.com/i915: 1

  # -- Set Security Context
  securityContext:
    privileged: true
    #fsGroup: 11337
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # privileged: true

  # -- Node Selector configuration
  nodeSelector: {}

  # -- Node toleration configuration
  tolerations: []

  # -- Set Pod affinity rules
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: app
                operator: In
                values:
                  - bulk-datastore

  # -- Set additonal pod Annotations
  podAnnotations: {}

