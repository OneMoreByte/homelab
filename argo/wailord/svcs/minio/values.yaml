minio:
  mode: standalone

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: app
            operator: In
            values:
            - bulk-datastore

  persistence:
    enabled: true
    existingClaim: minio-hostpath-pvc

  ingress:
    enabled: true
    annotations: {}
    path: /
    hosts:
      - minio.jsck.network
    tls:
      - secretName: jsck.network-cert
        hosts:
          - minio.jsck.network

  consoleIngress:
    enabled: true
    annotations: {}
    path: /
    hosts:
      - console.minio.jsck.network
    tls:
      - secretName: minio.console.jsck.network-cert
        hosts:
          - console.minio.jsck.network

  securityContext:
    enabled: true
    runAsUser: 11337
    runAsGroup: 11337
    fsGroup: 11337
    # fsGroupChangePolicy: "OnRootMismatch"

  buckets:
    - name: longhorn-backup
      policy: none
      versioning: true

  policies:
    - name: longhorn-backup-readwrite
      statements:
        - effect: Allow
          resources:
            - 'arn:aws:s3:::longhorn-backup'
          actions:
            - "s3:AbortMultipartUpload"
            - "s3:GetObject"
            - "s3:DeleteObject"
            - "s3:PutObject"
            - "s3:ListMultipartUploadParts"

  users: 
    - accessKey: longhorn
      existingSecret: longhorn-user-secret
      existingSecretKey: password
      policy: longhorn-backup-readwrite
      

  svcaccts: []
