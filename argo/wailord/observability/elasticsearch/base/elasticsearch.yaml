apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
spec:
  version: 8.12.1
  nodeSets:
    - name: master
      count: 3
      config:
        node.roles: ["master"]
      podTemplate:
        spec:
          initContainers:
            - name: sysctl
              securityContext:
                privileged: true
                runAsUser: 0
              command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi

    - name: data
      count: 5
      config:
        node.roles: ["data", "ingest", "transform"]
      podTemplate:
        spec:
          initContainers:
            - name: sysctl
              securityContext:
                privileged: true
                runAsUser: 0
              command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 64Gi

---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana-ui
spec:
  version: 8.12.1
  count: 1
  elasticsearchRef:
    name: elasticsearch
  config:
    server.publicBaseUrl: "https://kibana.jsck.network"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/service.serversscheme: https
    traefik.ingress.kubernetes.io/service.serverstransport: traefik-skipverify@kubernetescrd
  name: kibana-ui
spec:
  rules:
    - host: kibana.jsck.network
      http:
        paths:
          - backend:
              service:
                name: kibana-ui-kb-http
                port:
                  number: 5601
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - kibana.jsck.network
      secretName: jsck.network-cert
---
apiVersion: logstash.k8s.elastic.co/v1alpha1
kind: Logstash
metadata:
  name: logstash
spec:
  version: 8.12.1
  count: 1
  elasticsearchRefs:
    - clusterName: es
      name: elasticsearch
  pipelines:
    - pipeline.id: keycloak
      config.string: |
        input {
          gelf {
            port => 12201
          }
        }
        output {
          elasticsearch {
            hosts => [ "${ES_ES_HOSTS}" ]
            user => "${ES_ES_USER}"
            password => "${ES_ES_PASSWORD}"
            ssl_certificate_authorities => "${ES_ES_SSL_CERTIFICATE_AUTHORITY}"
          }
        }
  services:
    - name: beats
      service:
        spec:
          ports:
            - port: 12201
              name: "gelf"
              protocol: UDP
