apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mva.fullname" . }}
  labels:
    {{- include "mva.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "mva.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mva.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "mva.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init-links
          image: busybox:stable
          # We need the yaml files in the root of /config, but we need to store some stateful 
          # db stuff for flexget in there too.
          command: ['/bin/sh', '-c'] 
          args: ['cd /config-yaml; for f in *; do rm -f /config/$f; ln -s /config-yaml/$f /config/$f; done']
          volumeMounts:
          - name: config-yaml
            mountPath: /config-yaml
          - name: config
            mountPath: /config
        - name: {{ .Chart.Name }}-cleanup-startup
          image: busybox:stable
          # We need to clean up the lock file if it's still there or the pod might not come back right
          command: ['/bin/sh', '-c'] 
          args: ['rm -f /config/.config-lock']
          volumeMounts:
          - name: config
            mountPath: /config
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - name: torrent-dir
            mountPath: /mva
          - name: config-yaml
            mountPath: /config-yaml
          - name: config
            mountPath: /config
          - name: data
            mountPath: /data  
          command: ["flexget"]
          args: ['daemon', 'start']
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: torrent-dir
          persistentVolumeClaim:
            claimName: {{ include "mva.fullname" . }}-torrent-pvc
        - name: config-yaml
          configMap:
            name: {{ include "mva.fullname" . }}-configs
        - name: config
          persistentVolumeClaim:
            claimName: {{ include "mva.fullname" . }}-config-pvc
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "mva.fullname" . }}-data-pvc
